SELECT * FROM COMANDAS
SELECT * FROM FUNCIONARIOS
SELECT * FROM PRODUTOS
SELECT * FROM USUARIOS


CREATE TABLE funcionarios (
  idfuncionario SERIAL PRIMARY KEY,
  nomefuncionario VARCHAR(255) NOT NULL,
  salario DECIMAL NOT NULL,
  datacontratacao DATE NOT NULL,
  datademissao DATE,
  situacaofuncionario INTEGER NOT NULL
);

CREATE TABLE comandas (
  idcomanda SERIAL PRIMARY KEY NOT NULL,
  situacaocomanda BOOLEAN NOT NULL,
  valorcomanda DECIMAL,
  idfuncionario INTEGER NOT NULL,
  FOREIGN KEY (idfuncionario) REFERENCES funcionarios(idfuncionario),
  nomecomanda VARCHAR('100') NOT NULL
);

CREATE TABLE produtos (
  idproduto SERIAL PRIMARY KEY NOT NULL,
  nomeproduto VARCHAR(255) NOT NULL,
  descricao VARCHAR(255),
  categoria BOOLEAN NOT NULL,
  valorproduto DECIMAL(10, 2) NOT NULL
  imagem VARCHAR(255)
);

CREATE TABLE usuarios (
  idusuario SERIAL PRIMARY KEY,
  login VARCHAR(50) NOT NULL,
  senha VARCHAR(20) NOT NULL,
  idfuncionario INTEGER,
  FOREIGN KEY (idfuncionario) REFERENCES funcionarios(idfuncionario) ON DELETE SET NULL
);

INSERT INTO funcionarios (nomefuncionario, salario, datacontratacao, datademissao, situacaofuncionario)
VALUES
  ('João Silva', 2500.50, '2022-06-01', NULL, 1),
  ('Maria Oliveira', 3200.75, '2021-03-15', '2023-01-20', 0),
  ('Carlos Souza', 2900.60, '2020-08-10', NULL, 1),
  ('Ana Costa', 3500.40, '2023-02-01', NULL, 1),
  ('Ricardo Pereira', 2800.00, '2022-11-10', NULL, 1);

INSERT INTO produtos (nomeproduto, descricao, categoria, valorproduto)
VALUES
  ('Café', 'Café preto', false, 5.00),
  ('Refrigerante', 'Refrigerante sabor cola', false, 7.50),
  ('Lanche', 'Lanche natural', true, 15.00),
  ('Pizza', 'Pizza de calabresa', true, 30.00),
  ('Suco', 'Suco de laranja', false, 6.00);

INSERT INTO comandas (situacaocomanda, valorcomanda, idfuncionario)
VALUES
  (true, 25.50, 1),
  (false, 18.00, 2),
  (true, 12.00, 3),
  (true, 45.00, 4),
  (false, 30.00, 5);


INSERT INTO usuarios (login, senha, idfuncionario)
VALUES
  ('galema', '123', 1)
  
  
CREATE OR REPLACE FUNCTION verificar_login(usuario VARCHAR(50), senha1 VARCHAR(20))
RETURNS BOOLEAN AS
$$
DECLARE
    resultado BOOLEAN;
BEGIN
    IF EXISTS (
        SELECT 1
        FROM usuarios
        WHERE login = usuario AND senha = senha1
    ) THEN
        resultado := TRUE;
    ELSE
        resultado := FALSE;
    END IF;
    RETURN resultado;
END;
$$
LANGUAGE plpgsql;

SELECT * FROM verificar_login('anacosta', 'password');

